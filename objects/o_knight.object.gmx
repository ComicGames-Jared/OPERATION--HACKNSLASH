<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_knight_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_enemy_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

state = "Chase"
image_xscale = 0;
attack_range = 42;
chase_speed = 0.5;
image_speed = 0.15;
experience = 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch (state)
{
  case "Chase":
  set_state_sprite(s_knight_walk,0.05,0);
  if !instance_exists(o_skeleton) break;
  
     image_xscale = sign(o_skeleton.x - x);
     if image_xscale == 0
     {
      image_xscale = 1;
     }
     
     var direction_facing = image_xscale;
     var distance_to_player = point_distance(x,y, o_skeleton.x, o_skeleton.y);
     if distance_to_player &lt;= attack_range 
     {
        state = "Attack";
     }
     else
     {
        move_and_collide(direction_facing * chase_speed, 0);
     }
      break;
      
      if animation_hit_frame(4)
      {
      
        create_hitbox(x,y, self, s_skeleton_attack_one_damage, 4, 4, 1, image_xscale);
      
      }
      
      
      case "Attack":
      set_state_sprite(s_knight_attack,0.19, 0)
      
      if animation_hit_frame(5)
      {
      create_hitbox(x,y,self,s_skeleton_attack_one_damage, 4, 4, 10, image_xscale);
      }
      
      if animation_end()
         {
          state = "Chase";
         }
           break;
           
           case "Knockback":
           knockback_state(s_knight_hitstun, "Chase");
           break;
           
           case "Death":
           death_state(s_knight_die);
           break;
           
           default:
        show_debug_message("State " +state+" does not exist");
        state = "Chase"
        break 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
