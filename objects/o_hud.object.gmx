<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var view_width = view_wview[0];
var view_height = view_hview[0];
display_set_gui_size(view_width, view_height);

if not instance_exists(o_skeleton) exit;
draw_hp = o_skeleton.hp;
draw_max_hp = o_skeleton.max_hp
draw_set_font(f_one);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var hp_x = 8;
var hp_y = 8;
var hp_width = 198;
var hp_height = 6;
if instance_exists(o_skeleton) {
   draw_hp = lerp(draw_hp, o_skeleton.hp, 0.1);
   draw_max_hp = o_skeleton.max_hp;
   
} else {
  draw_hp = lerp(draw_hp, 0, 0.1);
}
var hp_percent = draw_hp / draw_max_hp;
draw_rectangle_colour(hp_x, hp_y, hp_x + (hp_width * hp_percent), hp_y + hp_height, c_white, c_white, c_white, c_white, false);
//draw_rectangle_colour(hp_x, hp_y, hp_x + hp_width, hp_y + hp_height, c_dkgray, c_dkgray, c_dkgray, c_dkgray, true);
draw_line_width_colour(hp_x-1, hp_y-1, hp_x + hp_width, hp_y-1,1,c_dkgray,c_dkgray);
draw_line_width_colour(hp_x-1, hp_y + hp_height, hp_x + hp_width, hp_y + hp_height,1,c_dkgray,c_dkgray);
draw_line_width_colour(hp_x-1, hp_y-1, hp_x - 1, hp_y + hp_height,1,c_dkgray,c_dkgray);
draw_line_width_colour(hp_x+ hp_width, hp_y-1, hp_x + hp_width, hp_y + hp_height,1,c_dkgray,c_dkgray);

if !instance_exists(o_skeleton) exit;
var text = "Kills: " + string(o_skeleton.kills);
var text_width = string_width(text);
var text_height = string_height(text);
var start_x = 8;
var start_y = 20;
var padding_x = 4;
var padding_y = 4;
draw_rectangle_colour(start_x, start_y, start_x + text_width + padding_x, start_y + text_height + padding_y, c_dkgray, c_dkgray,c_dkgray, c_dkgray, false);
draw_text(start_x + padding_x/2, start_y + padding_y, text);

var text = "Level: " + string(o_skeleton.level);
start_x += text_width + padding_x * 2.5;
var text_width = string_width(text);
var text_height = string_height(text);

var start_y = 20;
var padding_x = 4;
var padding_y = 4;
draw_rectangle_colour(start_x, start_y, start_x + text_width + padding_x, start_y + text_height + padding_y, c_dkgray, c_dkgray,c_dkgray, c_dkgray, false);
draw_text(start_x + padding_x/2, start_y + padding_y, text);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
